generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum MealType {
  BREAKFAST
  LUNCH
  DINNER
  SNACK
}

model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  passwordHash  String
  firstName     String
  lastName      String
  weightGoal    Int?
  allergies     Allergy[]
  dislikes      Dislike[]
  favoriteFoods FavoriteFood[]
  savedRecipes  SavedRecipe[]
}

model Allergy {
  id     Int    @id @default(autoincrement())
  name   String @unique
  userId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Dislike {
  id     Int    @id @default(autoincrement())
  name   String
  userId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model FavoriteFood {
  id     Int    @id @default(autoincrement())
  name   String
  userId Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Recipe {
  id                Int                @id @default(autoincrement())
  title             String
  instructions      String
  nutritionalValue  String
  createdAt         DateTime           @default(now())
  savedRecipes      SavedRecipe[]
  meals             Meal[]
  recipeIngredients RecipeIngredient[]
}

model RecipeIngredient {
  id       Int    @id @default(autoincrement())
  recipeId Int
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  name     String
  quantity String
}

model SavedRecipe {
  id       Int    @id @default(autoincrement())
  userId   Int
  recipeId Int
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
}

model Meal {
  id          Int          @id @default(autoincrement())
  name        String
  ingredients Ingredient[]
  recipeId    Int
  recipe      Recipe       @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  mealType    MealType
  createdAt   DateTime     @default(now())
}

model Ingredient {
  id        Int      @id @default(autoincrement())
  name      String
  quantity  String
  mealId    Int
  meal      Meal     @relation(fields: [mealId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}
